@inherits LayoutComponentBase
@inject IJSRuntime JS
@inject OOCL.Image.Shared.WebAppConfig Config

<div class="main-layout" style="display:flex;min-height:100vh;">
    <!-- Collapsible Sidebar -->
    <nav class="app-nav" style="background:var(--nav-bg);color:var(--nav-fg);width:@(navOpen?"200px":"54px");transition:width .18s ease, background .25s ease,color .25s ease;overflow:hidden;box-shadow:0 0 4px var(--shadow-color);display:flex;flex-direction:column;">
        <div style="display:flex;align-items:center;gap:.4rem;padding:.6rem .6rem .4rem .6rem;">
            <button @onclick="ToggleNav" class="nav-toggle-btn">@(navOpen?"✖":"☰")</button>
            @if (navOpen)
            {
                <span style="font-weight:600;font-size:.9rem;">Navigation</span>
            }
        </div>
        <div style="flex:1 1 auto;display:flex;flex-direction:column;padding:.3rem;gap:.2rem;">
            <NavLink href="/" Match="NavLinkMatch.All" class="nav-entry" style="text-decoration:none;color:inherit;">
                <div class="nav-link-inner @(IsActive("/") ? "active" : null)">
                    <span class="icon">🏠</span>
                    @if (navOpen) { <span>Home</span> }
                </div>
            </NavLink>
            <NavLink href="/explorer" class="nav-entry" style="text-decoration:none;color:inherit;">
                <div class="nav-link-inner @(IsActive("/explorer") ? "active" : null)">
                    <span class="icon">🛰️</span>
                    @if (navOpen) { <span>Explorer</span> }
                </div>
            </NavLink>
        </div>
        <div style="padding:.5rem .6rem;font-size:.65rem;opacity:.6;">@DateTime.Now:HH:mm</div>
    </nav>

    <div style="flex:1 1 auto;display:flex;flex-direction:column;min-width:0;background:var(--content-bg);color:var(--content-fg);">
        <header class="topbar" style="display:flex;align-items:center;gap:1rem;padding:.6rem 1rem;background:var(--topbar-bg);color:var(--topbar-fg);box-shadow:0 1px 4px var(--shadow-color);transition:background .25s ease,color .25s ease;">
            <div class="brand" style="font-weight:700;font-size:1rem;letter-spacing:.5px;">OOCL.Image</div>
            <div style="flex:1 1 auto;"></div>
            <div class="actions" style="display:flex;align-items:center;gap:.6rem;">
                <button class="theme-toggle-btn" @onclick="ToggleTheme">@toggleText</button>
            </div>
        </header>

        <main class="content" style="flex:1 1 auto;min-width:0;padding:0;">
            @Body
        </main>
    </div>
</div>

@code {
    private bool isDark;
    private bool navOpen = true;
    private string toggleText => isDark ? "Light" : "Dark";

    protected override void OnInitialized()
    {
        isDark = Config.DefaultDarkMode.HasValue ? Config.DefaultDarkMode.Value : false;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("theme.set", isDark);
        }
    }

    private async Task ToggleTheme()
    {
        isDark = !isDark;
        Config.DefaultDarkMode = isDark;
        await JS.InvokeVoidAsync("theme.set", isDark);
    }

    private void ToggleNav() => navOpen = !navOpen;

    private bool IsActive(string href)
    {
        var uri = NavigationManager?.ToBaseRelativePath(NavigationManager.Uri)?.TrimEnd('/');
        if (string.IsNullOrEmpty(uri) && href == "/") return true;
        return href.Trim('/').Equals(uri, StringComparison.OrdinalIgnoreCase);
    }

    [Inject] private NavigationManager NavigationManager { get; set; } = default!;
}

