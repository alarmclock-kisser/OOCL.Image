@page "/"
@namespace OOCL.Image.WebApp.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using OOCL.Image.WebApp.Components
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>OOCL.Image WebApp</title>

    <base href="~/" />

    <!-- Lokale Styles -->
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="css/site.css" />

    <link href="_content/Radzen.Blazor/css/default-base.css" rel="stylesheet" />
    <script src="_content/Radzen.Blazor/Radzen.Blazor.js"></script>

    <!-- Radzen Styles -->
    <link rel="stylesheet" href="_content/Radzen.Blazor/css/default-base.css" />
    <link id="rz-theme" rel="stylesheet" href="_content/Radzen.Blazor/css/default.css" />

    <link rel="icon" type="image/x-icon" href="favicon.ico" />
</head>
<body>
    <app>
        <component type="typeof(App)" render-mode="ServerPrerendered" />
    </app>

    <!-- Wichtig: _framework/ (nicht über Url.Content auflösen!) -->
    <script src="_content/Radzen.Blazor/Radzen.Blazor.js"></script>

    <!-- browserHelpers muss vor blazor.server.js geladen werden, damit JS-Interop-Funktionen wie prefersDark verfügbar sind -->
    <script src="js/browserHelpers.js"></script>

    <script src="_framework/blazor.server.js"></script>

    <script>
        window.setRadzenTheme = function(theme) {
            const link = document.getElementById('rz-theme');
            if (!link) return;
            link.href = `_content/Radzen.Blazor/css/${theme === 'dark' ? 'dark' : 'default'}.css`;
        };

        window.theme = {
            set: function(isDark) {
                document.body.classList.remove('theme-dark', 'theme-light');
                document.body.classList.add(isDark ? 'theme-dark' : 'theme-light');
                window.setRadzenTheme(isDark ? 'dark' : 'default');
            }
        };

        window.downloadFileFromBase64 = (base64, mime, fileName) => {
            const link = document.createElement('a');
            link.href = `data:${mime};base64,${base64}`;
            link.download = fileName;
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        };

        window.downloadFileFromDataUri = (fileName, dataUri) => {
            const link = document.createElement('a');
            link.href = dataUri;
            link.download = fileName;
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        };
    </script>
    <script src="js/downloadHelpers.js"></script>
</body>
</html>
